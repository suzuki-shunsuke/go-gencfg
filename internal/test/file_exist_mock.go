package test

// Don't edit this file.
// This file is generated by gomic 0.5.2.
// https://github.com/suzuki-shunsuke/gomic

import (
	testing "testing"

	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// FileExistMock is a mock.
	FileExistMock struct {
		t                      *testing.T
		name                   string
		callbackNotImplemented gomic.CallbackNotImplemented
		impl                   struct {
			Exist func(src string) bool
		}
	}
)

// NewFileExistMock returns FileExistMock .
func NewFileExistMock(t *testing.T, cb gomic.CallbackNotImplemented) *FileExistMock {
	return &FileExistMock{
		t: t, name: "FileExistMock", callbackNotImplemented: cb}
}

// Exist is a mock method.
func (mock FileExistMock) Exist(src string) bool {
	methodName := "Exist" // nolint: goconst
	if mock.impl.Exist != nil {
		return mock.impl.Exist(src)
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroExist(src)
}

// SetFuncExist sets a method and returns the mock.
func (mock *FileExistMock) SetFuncExist(impl func(src string) bool) *FileExistMock {
	mock.impl.Exist = impl
	return mock
}

// SetReturnExist sets a fake method.
func (mock *FileExistMock) SetReturnExist(r0 bool) *FileExistMock {
	mock.impl.Exist = func(string) bool {
		return r0
	}
	return mock
}

// fakeZeroExist is a fake method which returns zero values.
func (mock FileExistMock) fakeZeroExist(src string) bool {
	var (
		r0 bool
	)
	return r0
}
