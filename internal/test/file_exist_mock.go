package test

// Don't edit this file.
// This file is generated by gomic 0.4.0.
// https://github.com/suzuki-shunsuke/gomic

import (
	testing "testing"

	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// FileExistMock is a mock.
	FileExistMock struct {
		t                      *testing.T
		name                   string
		CallbackNotImplemented gomic.CallbackNotImplemented
		Impl                   FileExistMockImpl
	}

	// FileExistMockImpl holds functions which implement interface's methods.
	FileExistMockImpl struct {
		Exist func(src string) bool
	}
)

// NewFileExistMock returns FileExistMock .
func NewFileExistMock(t *testing.T, cb gomic.CallbackNotImplemented) *FileExistMock {
	return &FileExistMock{t: t, CallbackNotImplemented: cb}
}

// Exist is a mock method.
func (mock FileExistMock) Exist(src string) bool {
	methodName := "Exist" // nolint: goconst
	if mock.Impl.Exist != nil {
		return mock.Impl.Exist(src)
	}
	if mock.CallbackNotImplemented != nil {
		mock.CallbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroExist(src)
}

// SetFakeExist sets a fake method.
func (mock *FileExistMock) SetFakeExist(r0 bool) {
	mock.Impl.Exist = func(src string) bool {
		return r0
	}
}

// fakeZeroExist is a fake method which returns zero values.
func (mock FileExistMock) fakeZeroExist(src string) bool {
	var (
		r0 bool
	)
	return r0
}
