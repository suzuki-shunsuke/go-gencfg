package test

// Don't edit this file.
// This file is generated by gomic 0.5.1.
// https://github.com/suzuki-shunsuke/gomic

import (
	testing "testing"

	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// FileWriterMock is a mock.
	FileWriterMock struct {
		t                      *testing.T
		name                   string
		callbackNotImplemented gomic.CallbackNotImplemented
		impl                   struct {
			Write func(dest string, data []byte) error
		}
	}
)

// NewFileWriterMock returns FileWriterMock .
func NewFileWriterMock(t *testing.T, cb gomic.CallbackNotImplemented) *FileWriterMock {
	return &FileWriterMock{t: t, callbackNotImplemented: cb}
}

// Write is a mock method.
func (mock FileWriterMock) Write(dest string, data []byte) error {
	methodName := "Write" // nolint: goconst
	if mock.impl.Write != nil {
		return mock.impl.Write(dest, data)
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroWrite(dest, data)
}

// SetFuncWrite sets a method and returns the mock.
func (mock *FileWriterMock) SetFuncWrite(impl func(dest string, data []byte) error) *FileWriterMock {
	mock.impl.Write = impl
	return mock
}

// SetReturnWrite sets a fake method.
func (mock *FileWriterMock) SetReturnWrite(r0 error) *FileWriterMock {
	mock.impl.Write = func(string, []byte) error {
		return r0
	}
	return mock
}

// fakeZeroWrite is a fake method which returns zero values.
func (mock FileWriterMock) fakeZeroWrite(dest string, data []byte) error {
	var (
		r0 error
	)
	return r0
}
