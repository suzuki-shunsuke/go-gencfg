package test

// Don't edit this file.
// This file is generated by gomic 0.4.0.
// https://github.com/suzuki-shunsuke/gomic

import (
	testing "testing"

	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// DirMakerMock is a mock.
	DirMakerMock struct {
		t                      *testing.T
		name                   string
		CallbackNotImplemented gomic.CallbackNotImplemented
		Impl                   DirMakerMockImpl
	}

	// DirMakerMockImpl holds functions which implement interface's methods.
	DirMakerMockImpl struct {
		Make func(dest string) error
	}
)

// NewDirMakerMock returns DirMakerMock .
func NewDirMakerMock(t *testing.T, cb gomic.CallbackNotImplemented) *DirMakerMock {
	return &DirMakerMock{t: t, CallbackNotImplemented: cb}
}

// Make is a mock method.
func (mock DirMakerMock) Make(dest string) error {
	methodName := "Make" // nolint: goconst
	if mock.Impl.Make != nil {
		return mock.Impl.Make(dest)
	}
	if mock.CallbackNotImplemented != nil {
		mock.CallbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroMake(dest)
}

// SetFakeMake sets a fake method.
func (mock *DirMakerMock) SetFakeMake(r0 error) {
	mock.Impl.Make = func(dest string) error {
		return r0
	}
}

// fakeZeroMake is a fake method which returns zero values.
func (mock DirMakerMock) fakeZeroMake(dest string) error {
	var (
		r0 error
	)
	return r0
}
