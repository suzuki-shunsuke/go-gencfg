package test

// Don't edit this file.
// This file is generated by gomic 0.5.1.
// https://github.com/suzuki-shunsuke/gomic

import (
	testing "testing"

	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// DirMakerMock is a mock.
	DirMakerMock struct {
		t                      *testing.T
		name                   string
		callbackNotImplemented gomic.CallbackNotImplemented
		impl                   struct {
			Make func(dest string) error
		}
	}
)

// NewDirMakerMock returns DirMakerMock .
func NewDirMakerMock(t *testing.T, cb gomic.CallbackNotImplemented) *DirMakerMock {
	return &DirMakerMock{t: t, callbackNotImplemented: cb}
}

// Make is a mock method.
func (mock DirMakerMock) Make(dest string) error {
	methodName := "Make" // nolint: goconst
	if mock.impl.Make != nil {
		return mock.impl.Make(dest)
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroMake(dest)
}

// SetFuncMake sets a method and returns the mock.
func (mock *DirMakerMock) SetFuncMake(impl func(dest string) error) *DirMakerMock {
	mock.impl.Make = impl
	return mock
}

// SetReturnMake sets a fake method.
func (mock *DirMakerMock) SetReturnMake(r0 error) *DirMakerMock {
	mock.impl.Make = func(string) error {
		return r0
	}
	return mock
}

// fakeZeroMake is a fake method which returns zero values.
func (mock DirMakerMock) fakeZeroMake(dest string) error {
	var (
		r0 error
	)
	return r0
}
