package test

// Don't edit this file.
// This file is generated by gomic 0.4.0.
// https://github.com/suzuki-shunsuke/gomic

import (
	testing "testing"

	test "github.com/suzuki-shunsuke/go-gencfg/internal/domain"
	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// StrFormatterMock is a mock.
	StrFormatterMock struct {
		t                      *testing.T
		name                   string
		CallbackNotImplemented gomic.CallbackNotImplemented
		Impl                   StrFormatterMockImpl
	}

	// StrFormatterMockImpl holds functions which implement interface's methods.
	StrFormatterMockImpl struct {
		Format func(dest, text string, formatters []string, reader test.FileReader, executer test.CmdExecuter) (string, error)
	}
)

// NewStrFormatterMock returns StrFormatterMock .
func NewStrFormatterMock(t *testing.T, cb gomic.CallbackNotImplemented) *StrFormatterMock {
	return &StrFormatterMock{t: t, CallbackNotImplemented: cb}
}

// Format is a mock method.
func (mock StrFormatterMock) Format(dest, text string, formatters []string, reader test.FileReader, executer test.CmdExecuter) (string, error) {
	methodName := "Format" // nolint: goconst
	if mock.Impl.Format != nil {
		return mock.Impl.Format(dest, text, formatters, reader, executer)
	}
	if mock.CallbackNotImplemented != nil {
		mock.CallbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroFormat(dest, text, formatters, reader, executer)
}

// SetFakeFormat sets a fake method.
func (mock *StrFormatterMock) SetFakeFormat(r0 string, r1 error) {
	mock.Impl.Format = func(dest, text string, formatters []string, reader test.FileReader, executer test.CmdExecuter) (string, error) {
		return r0, r1
	}
}

// fakeZeroFormat is a fake method which returns zero values.
func (mock StrFormatterMock) fakeZeroFormat(dest, text string, formatters []string, reader test.FileReader, executer test.CmdExecuter) (string, error) {
	var (
		r0 string
		r1 error
	)
	return r0, r1
}
