package test

// Don't edit this file.
// This file is generated by gomic 0.4.0.
// https://github.com/suzuki-shunsuke/gomic

import (
	testing "testing"

	test "github.com/suzuki-shunsuke/go-gencfg/internal/domain"
	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// CfgReaderMock is a mock.
	CfgReaderMock struct {
		t                      *testing.T
		name                   string
		CallbackNotImplemented gomic.CallbackNotImplemented
		Impl                   CfgReaderMockImpl
	}

	// CfgReaderMockImpl holds functions which implement interface's methods.
	CfgReaderMockImpl struct {
		Read func(src string) (test.Cfg, error)
	}
)

// NewCfgReaderMock returns CfgReaderMock .
func NewCfgReaderMock(t *testing.T, cb gomic.CallbackNotImplemented) *CfgReaderMock {
	return &CfgReaderMock{t: t, CallbackNotImplemented: cb}
}

// Read is a mock method.
func (mock CfgReaderMock) Read(src string) (test.Cfg, error) {
	methodName := "Read" // nolint: goconst
	if mock.Impl.Read != nil {
		return mock.Impl.Read(src)
	}
	if mock.CallbackNotImplemented != nil {
		mock.CallbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroRead(src)
}

// SetFakeRead sets a fake method.
func (mock *CfgReaderMock) SetFakeRead(r0 test.Cfg, r1 error) {
	mock.Impl.Read = func(src string) (test.Cfg, error) {
		return r0, r1
	}
}

// fakeZeroRead is a fake method which returns zero values.
func (mock CfgReaderMock) fakeZeroRead(src string) (test.Cfg, error) {
	var (
		r0 test.Cfg
		r1 error
	)
	return r0, r1
}
